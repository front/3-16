<?php
// $Id: xmlsitemap_node.install,v 1.9.2.11.2.26 2009/06/29 02:21:33 davereid Exp $

/**
 * @file
 * Install and uninstall schema and functions for the xmlsitemap_node module.
 */

/**
 * Implementation of hook_requirements().
 */
function xmlsitemap_node_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if (function_exists('user_access') && !user_access('access content', drupal_anonymous_user())) {
    $requirements['xmlsitemap_node_anonymous_permission'] = array(
      'title' => $t('XML sitemap node'),
      'value' => $t('Anonymous access to content'),
      'description' => $t('In order to list content links in the sitemap, the anonymous user must have the <a href="@perm-link">%permission</a> permission.', array('@perm-link' => url('admin/user/permissions', array('fragment' => 'module-node')), '%permission' => 'access content')),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  return $requirements;
}

/**
 * Implementation of hook_schema_alter().
 */
function xmlsitemap_node_schema_alter(&$schema) {
  $schema['xmlsitemap']['fields']['node_type'] = array(
    'description' => 'The {node_type}.type of this node link.',
    'type' => 'varchar',
    'length' => 32,
    'default' => NULL,
  );
  $schema['xmlsitemap']['indexes']['node_type'] = array('node_type');
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_node_install() {
  $ret = array();
  $field = array(
    'description' => 'The {node_type}.type of this node link.',
    'type' => 'varchar',
    'length' => 32,
    'default' => NULL,
  );
  db_add_field($ret, 'xmlsitemap', 'node_type', $field);
  db_add_index($ret, 'xmlsitemap', 'node_type', array('node_type'));
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_node_uninstall() {
  $ret = array();
  db_drop_index($ret, 'xmlsitemap', 'node_type');
  db_drop_field($ret, 'xmlsitemap', 'node_type');

  // Remove variables.
  drupal_load('module', 'xmlsitemap_node');
  $variables = array_keys(xmlsitemap_node_variables());
  foreach ($variables as $variable) {
    variable_del($variable);
  }
}

// @todo Remove these update functions before alpha.
function xmlsitemap_node_update_1() {
  $ret = array();
  $field = array(
    'description' => "The {node_type}.type of this link's node.",
    'type' => 'varchar',
    'length' => 32,
  );
  db_add_field($ret, 'xmlsitemap', 'node_type', $field);
  db_add_index($ret, 'xmlsitemap', 'node_type', array('node_type'));
  $ret[] = update_sql("UPDATE {xmlsitemap} SET node_type = (SELECT type FROM {node} WHERE nid = {xmlsitemap}.id) WHERE type = 'node'");
  return $ret;
}

//function xmlsitemap_node_update_2() {
//  $ret = array();
//  if (db_column_exists('xmlsitemap', 'language')) {
//    $ret[] = update_sql("UPDATE {xmlsitemap} SET language = (SELECT node.language FROM {node} WHERE node.nid = xmlsitemap.id AND node.language <> '') WHERE xmlsitemap.type = 'node'");
//  }
//  else {
//    // Set the abort flag so this update runs again when the {xmlsitemap}.language field exists.
//    $ret['#abort'] = TRUE;
//  }
//  return $ret;
//}

function xmlsitemap_menu_update_5() {
  $ret = array();
  $ret[] = update_sql("UPDATE {system} SET weight = 0 WHERE type = 'module' AND name = 'xmlsitemap_node'");
  return $ret;
}
