<?php
// $Id: xmlsitemap_custom.module,v 1.1.2.3 2009/06/12 00:10:23 davereid Exp $

/**
 * Implementation of hook_menu().
 */
function xmlsitemap_custom_menu() {
  $items['admin/settings/xmlsitemap/custom'] = array(
    'title' => 'Custom links',
    'page callback' => 'xmlsitemap_custom_list_links',
    'access arguments' => array('administer xmlsitemap'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'xmlsitemap_custom.admin.inc',
  );
  $items['admin/settings/xmlsitemap/custom/list'] = array(
    'title' => 'List',
    'access arguments' => array('administer xmlsitemap'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
    'file' => 'xmlsitemap_custom.admin.inc',
  );
  $items['admin/settings/xmlsitemap/custom/add'] = array(
    'title' => 'Add custom link',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('xmlsitemap_custom_edit_link_form'),
    'access arguments' => array('administer xmlsitemap'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'xmlsitemap_custom.admin.inc',
  );
  $items['admin/settings/xmlsitemap/custom/edit/%xmlsitemap_custom'] = array(
    'title' => 'Edit custom link',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('xmlsitemap_custom_edit_link_form', 5),
    'access arguments' => array('administer xmlsitemap'),
    'type' => MENU_CALLBACK,
    'file' => 'xmlsitemap_custom.admin.inc',
  );
  $items['admin/settings/xmlsitemap/custom/delete/%xmlsitemap_custom'] = array(
    'title' => 'Edit custom link',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('xmlsitemap_custom_delete_link_form', 5),
    'access arguments' => array('administer xmlsitemap'),
    'type' => MENU_CALLBACK,
    'file' => 'xmlsitemap_custom.admin.inc',
  );
  return $items;
}

//function xmlsitemap_custom_form_xmlsitemap_settings_form_alter(&$form, $form_state) {
//  module_load_include('admin.inc', 'xmlsitemap_custom');
//  $form['custom'] = array(
//    '#type' => 'fieldset',
//    '#title' => t('Custom links'),
//    '#collapsible' => TRUE,
//    '#collapsed' => !db_result(db_query_range("SELECT 1 FROM {xmlsitemap} WHERE type = 'custom'", NULL, 0, 1)),
//  );
//  $form['custom']['custom_links'] = array(
//    '#value' => xmlsitemap_custom_list_links(),
//  );
//}

function xmlsitemap_custom_load($id) {
  return xmlsitemap_load_link(array('type' => 'custom', 'id' => $id));
}

///**
// * Implementation of hook_xmlsitemap_links().
// */
//function xmlsitemap_custom_xmlsitemap_links($offset = 0, $limit = 0) {
//  $links = array();
//
//  $sql = "SELECT n.nid FROM {node} n WHERE n.nid > %d ORDER BY n.nid";
//  $query = ($limit ? db_query_range($sql, $offset, 0, $limit) : db_query($sql, $offset));
//
//  while ($nid = db_result($query)) {
//    $node = node_load($nid, NULL, TRUE);
//    $links[] = xmlsitemap_node_create_link($node);
//  }
//
//  return $links;
//}
//
///**
// * Implementation of hook_xmlsitemap_links_batch_info().
// */
//function xmlsitemap_node_xmlsitemap_custom_batch_info() {
//  return array(
//    'max' => db_result(db_query("SELECT COUNT(n.nid) FROM {node} n")),
//  );
//}
//
///**
// * Implementation of hook_xmlsitemap_links_clear().
// */
//function xmlsitemap_custom_xmlsitemap_custom_clear() {
//  db_query("DELETE FROM {xmlsitemap} WHERE type = 'custom'");
//}

/**
 * Create a sitemap link from a node.
 *
 * @param $node
 *   A node object.
 */
//function xmlsitemap_custom_create_link(&$node) {
//  return array();
//}
